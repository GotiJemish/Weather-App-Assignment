{"ast":null,"code":"// import React, { useState } from 'react';\n// import { AsyncPaginate } from 'react-select-async-paginate';\n// import { fetchCities } from '../../api/Api';\n// const GEO_API_URL = 'https://wft-geo-db.p.rapidapi.com/v1/geo';\n\n// const GEO_API_OPTIONS = {\n//   method: 'GET',\n//   headers: {\n//     'X-RapidAPI-Key': '4f0dcce84bmshac9e329bd55fd14p17ec6fjsnff18c2e61917',\n//     'X-RapidAPI-Host': 'wft-geo-db.p.rapidapi.com',\n//   },\n// };\n// async function fetchCities(input) {\n//   try {\n//     const response = await fetch(\n//       `${GEO_API_URL}/cities?minPopulation=10000&namePrefix=${input}`,\n//       GEO_API_OPTIONS\n//     );\n\n//     const data = await response.json();\n//     return data;\n//   } catch (error) {\n//     console.log(error);\n//     return;\n//   }\n// }\n\n// const Search = ({ onSearchChange }) => {\n//   const [searchValue, setSearchValue] = useState(null);\n\n//   const loadOptions = async (inputValue) => {\n//     const citiesList = await fetchCities(inputValue);\n\n//     return {\n//       options: citiesList.data.map((city) => {\n//         return {\n//           value: `${city.latitude} ${city.longitude}`,\n//           label: `${city.name}, ${city.countryCode}`,\n//         };\n//       }),\n//     };\n//   };\n\n//   const onChangeHandler = (enteredData) => {\n//     setSearchValue(enteredData);\n//     onSearchChange(enteredData);\n//   };\n\n//   return (\n//     <AsyncPaginate\n//       placeholder=\"Search for cities\"\n//       debounceTimeout={600}\n//       value={searchValue}\n//       onChange={onChangeHandler}\n//       loadOptions={loadOptions}\n//     />\n//   );\n// };\n\n// export default Search;","map":{"version":3,"names":[],"sources":["C:/Users/gja53/OneDrive/Desktop/the-weather-forecasting-main/the-weather-forecasting-main/src/components/Search/Search.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { AsyncPaginate } from 'react-select-async-paginate';\n// import { fetchCities } from '../../api/Api';\n// const GEO_API_URL = 'https://wft-geo-db.p.rapidapi.com/v1/geo';\n\n\n// const GEO_API_OPTIONS = {\n//   method: 'GET',\n//   headers: {\n//     'X-RapidAPI-Key': '4f0dcce84bmshac9e329bd55fd14p17ec6fjsnff18c2e61917',\n//     'X-RapidAPI-Host': 'wft-geo-db.p.rapidapi.com',\n//   },\n// };\n// async function fetchCities(input) {\n//   try {\n//     const response = await fetch(\n//       `${GEO_API_URL}/cities?minPopulation=10000&namePrefix=${input}`,\n//       GEO_API_OPTIONS\n//     );\n\n//     const data = await response.json();\n//     return data;\n//   } catch (error) {\n//     console.log(error);\n//     return;\n//   }\n// }\n\n\n\n// const Search = ({ onSearchChange }) => {\n//   const [searchValue, setSearchValue] = useState(null);\n\n//   const loadOptions = async (inputValue) => {\n//     const citiesList = await fetchCities(inputValue);\n\n//     return {\n//       options: citiesList.data.map((city) => {\n//         return {\n//           value: `${city.latitude} ${city.longitude}`,\n//           label: `${city.name}, ${city.countryCode}`,\n//         };\n//       }),\n//     };\n//   };\n\n//   const onChangeHandler = (enteredData) => {\n//     setSearchValue(enteredData);\n//     onSearchChange(enteredData);\n//   };\n\n//   return (\n//     <AsyncPaginate\n//       placeholder=\"Search for cities\"\n//       debounceTimeout={600}\n//       value={searchValue}\n//       onChange={onChangeHandler}\n//       loadOptions={loadOptions}\n//     />\n//   );\n// };\n\n// export default Search;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}