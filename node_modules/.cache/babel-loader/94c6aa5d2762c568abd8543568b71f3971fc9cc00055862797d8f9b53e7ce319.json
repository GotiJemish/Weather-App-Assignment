{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gja53\\\\OneDrive\\\\Desktop\\\\the-weather-forecasting-main\\\\the-weather-forecasting-main\\\\src\\\\components\\\\Search\\\\Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { AsyncPaginate } from 'react-select-async-paginate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = ({\n  onSearchChange\n}) => {\n  _s();\n  const [searchValue, setSearchValue] = useState(null);\n  const loadOptions = async inputValue => {\n    try {\n      const citiesList = await fetchCities(inputValue);\n      return {\n        options: citiesList.map(city => ({\n          value: `${city.latitude} ${city.longitude}`,\n          label: `${city.name}, ${city.countryCode}`\n        }))\n      };\n    } catch (error) {\n      console.error('Error loading options:', error);\n      return {\n        options: []\n      };\n    }\n  };\n  const onChangeHandler = enteredData => {\n    setSearchValue(enteredData);\n    onSearchChange(enteredData);\n  };\n  return /*#__PURE__*/_jsxDEV(AsyncPaginate, {\n    placeholder: \"Search for cities\",\n    debounceTimeout: 600,\n    value: searchValue,\n    onChange: onChangeHandler,\n    loadOptions: loadOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"OrQVItsfaX3xDem37kG4cfR7N1k=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","AsyncPaginate","jsxDEV","_jsxDEV","Search","onSearchChange","_s","searchValue","setSearchValue","loadOptions","inputValue","citiesList","fetchCities","options","map","city","value","latitude","longitude","label","name","countryCode","error","console","onChangeHandler","enteredData","placeholder","debounceTimeout","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gja53/OneDrive/Desktop/the-weather-forecasting-main/the-weather-forecasting-main/src/components/Search/Search.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { AsyncPaginate } from 'react-select-async-paginate';\n\nconst Search = ({ onSearchChange }) => {\n  const [searchValue, setSearchValue] = useState(null);\n\n  const loadOptions = async (inputValue) => {\n    try {\n      const citiesList = await fetchCities(inputValue);\n\n      return {\n        options: citiesList.map((city) => ({\n          value: `${city.latitude} ${city.longitude}`,\n          label: `${city.name}, ${city.countryCode}`,\n        })),\n      };\n    } catch (error) {\n      console.error('Error loading options:', error);\n      return { options: [] };\n    }\n  };\n\n  const onChangeHandler = (enteredData) => {\n    setSearchValue(enteredData);\n    onSearchChange(enteredData);\n  };\n\n  return (\n    <AsyncPaginate\n      placeholder=\"Search for cities\"\n      debounceTimeout={600}\n      value={searchValue}\n      onChange={onChangeHandler}\n      loadOptions={loadOptions}\n    />\n  );\n};\n\nexport default Search;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMS,WAAW,GAAG,MAAOC,UAAU,IAAK;IACxC,IAAI;MACF,MAAMC,UAAU,GAAG,MAAMC,WAAW,CAACF,UAAU,CAAC;MAEhD,OAAO;QACLG,OAAO,EAAEF,UAAU,CAACG,GAAG,CAAEC,IAAI,KAAM;UACjCC,KAAK,EAAG,GAAED,IAAI,CAACE,QAAS,IAAGF,IAAI,CAACG,SAAU,EAAC;UAC3CC,KAAK,EAAG,GAAEJ,IAAI,CAACK,IAAK,KAAIL,IAAI,CAACM,WAAY;QAC3C,CAAC,CAAC;MACJ,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,OAAO;QAAET,OAAO,EAAE;MAAG,CAAC;IACxB;EACF,CAAC;EAED,MAAMW,eAAe,GAAIC,WAAW,IAAK;IACvCjB,cAAc,CAACiB,WAAW,CAAC;IAC3BpB,cAAc,CAACoB,WAAW,CAAC;EAC7B,CAAC;EAED,oBACEtB,OAAA,CAACF,aAAa;IACZyB,WAAW,EAAC,mBAAmB;IAC/BC,eAAe,EAAE,GAAI;IACrBX,KAAK,EAAET,WAAY;IACnBqB,QAAQ,EAAEJ,eAAgB;IAC1Bf,WAAW,EAAEA;EAAY;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEN,CAAC;AAAC1B,EAAA,CAjCIF,MAAM;AAAA6B,EAAA,GAAN7B,MAAM;AAmCZ,eAAeA,MAAM;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}