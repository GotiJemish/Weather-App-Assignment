{"ast":null,"code":"import TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport { styled, createTheme } from '@mui/material/styles';\nimport { alpha } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport InputBase from '@mui/material/InputBase';\n\n// Create a Material-UI theme\nconst theme = createTheme({\n  typography: {\n    fontFamily: ['Poppins', 'Arial', 'sans-serif'].join(',')\n  },\n  overrides: {\n    MuiCssBaseline: {\n      '@global': {\n        '@import': [\"url('https://fonts.googleapis.com/css2?family=Roboto+Condensed:wght@300;400;700&display=swap')\", \"url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&family=Roboto+Condensed:wght@300;400;700&display=swap')\"],\n        body: {\n          margin: 0,\n          fontFamily: ['Poppins', 'Arial', 'sans-serif'].join(','),\n          WebkitFontSmoothing: 'antialiased',\n          MozOsxFontSmoothing: 'grayscale',\n          color: '#fff',\n          // Set text color to white\n          background: 'transparent',\n          // Set background to transparent\n          minHeight: '100vh'\n        },\n        code: {\n          fontFamily: \"source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace\"\n        }\n      }\n    }\n  }\n});\n\n// const CustomTextField = styled(TextField)({\n//   backgroundColor: 'rgba(255, 255, 255, 0.6)', // Transparent white background\n//   color: 'black', // Black font color\n//   borderRadius: '25px', // Border radius\n//   borderColor: 'white', // Default border color\n//   borderWidth: '1px',\n//   '&:focus': { // Border color when TextField is focused\n//     borderColor: 'yellow', // Change to yellow when focused\n//   }\n// });\n\n// const StyledInputBase = styled(InputBase)(({ theme }) => ({\n//   color: 'inherit',\n//   '& .MuiInputBase-input': {\n//     padding: theme.spacing(1, 1, 1, 0),\n//     paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n//     transition: theme.transitions.create('width'),\n//     width: '100%',\n//     [theme.breakpoints.up('md')]: {\n//       width: '20ch',\n//     },\n//   },\n// }));\n\n// const StyledTableCell = styled(TableCell)(({ theme }) => ({\n//   [`&.${tableCellClasses.head}`]: {\n//   },\n//   [`&.${tableCellClasses.body}`]: {\n//     fontSize: 14,\n//   },\n// }));\n\nexport { theme };","map":{"version":3,"names":["TableCell","tableCellClasses","styled","createTheme","alpha","TextField","InputBase","theme","typography","fontFamily","join","overrides","MuiCssBaseline","body","margin","WebkitFontSmoothing","MozOsxFontSmoothing","color","background","minHeight","code"],"sources":["C:/Users/gja53/OneDrive/Desktop/the-weather-forecasting-main/the-weather-forecasting-main/src/components/Reusable/TableStyle.js"],"sourcesContent":["import TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport { styled, createTheme } from '@mui/material/styles';\r\nimport { alpha } from '@mui/material/styles';\r\n\r\nimport TextField from '@mui/material/TextField';\r\nimport InputBase from '@mui/material/InputBase';\r\n\r\n\r\n// Create a Material-UI theme\r\nconst theme = createTheme({\r\n  typography: {\r\n    fontFamily: ['Poppins', 'Arial', 'sans-serif'].join(','),\r\n  },\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      '@global': {\r\n        '@import': [\r\n          \"url('https://fonts.googleapis.com/css2?family=Roboto+Condensed:wght@300;400;700&display=swap')\",\r\n          \"url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&family=Roboto+Condensed:wght@300;400;700&display=swap')\",\r\n        ],\r\n        body: {\r\n          margin: 0,\r\n          fontFamily: ['Poppins', 'Arial', 'sans-serif'].join(','),\r\n          WebkitFontSmoothing: 'antialiased',\r\n          MozOsxFontSmoothing: 'grayscale',\r\n          color: '#fff', // Set text color to white\r\n          background: 'transparent', // Set background to transparent\r\n          minHeight: '100vh',\r\n        },\r\n        code: {\r\n          fontFamily: \"source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\n// const CustomTextField = styled(TextField)({\r\n//   backgroundColor: 'rgba(255, 255, 255, 0.6)', // Transparent white background\r\n//   color: 'black', // Black font color\r\n//   borderRadius: '25px', // Border radius\r\n//   borderColor: 'white', // Default border color\r\n//   borderWidth: '1px',\r\n//   '&:focus': { // Border color when TextField is focused\r\n//     borderColor: 'yellow', // Change to yellow when focused\r\n//   }\r\n// });\r\n\r\n// const StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n//   color: 'inherit',\r\n//   '& .MuiInputBase-input': {\r\n//     padding: theme.spacing(1, 1, 1, 0),\r\n//     paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n//     transition: theme.transitions.create('width'),\r\n//     width: '100%',\r\n//     [theme.breakpoints.up('md')]: {\r\n//       width: '20ch',\r\n//     },\r\n//   },\r\n// }));\r\n\r\n// const StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n//   [`&.${tableCellClasses.head}`]: {\r\n//   },\r\n//   [`&.${tableCellClasses.body}`]: {\r\n//     fontSize: 14,\r\n//   },\r\n// }));\r\n\r\n\r\n\r\n\r\n\r\nexport {theme  };\r\n"],"mappings":"AAAA,OAAOA,SAAS,IAAIC,gBAAgB,QAAQ,yBAAyB;AACrE,SAASC,MAAM,EAAEC,WAAW,QAAQ,sBAAsB;AAC1D,SAASC,KAAK,QAAQ,sBAAsB;AAE5C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,SAAS,MAAM,yBAAyB;;AAG/C;AACA,MAAMC,KAAK,GAAGJ,WAAW,CAAC;EACxBK,UAAU,EAAE;IACVC,UAAU,EAAE,CAAC,SAAS,EAAE,OAAO,EAAE,YAAY,CAAC,CAACC,IAAI,CAAC,GAAG;EACzD,CAAC;EACDC,SAAS,EAAE;IACTC,cAAc,EAAE;MACd,SAAS,EAAE;QACT,SAAS,EAAE,CACT,gGAAgG,EAChG,oIAAoI,CACrI;QACDC,IAAI,EAAE;UACJC,MAAM,EAAE,CAAC;UACTL,UAAU,EAAE,CAAC,SAAS,EAAE,OAAO,EAAE,YAAY,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;UACxDK,mBAAmB,EAAE,aAAa;UAClCC,mBAAmB,EAAE,WAAW;UAChCC,KAAK,EAAE,MAAM;UAAE;UACfC,UAAU,EAAE,aAAa;UAAE;UAC3BC,SAAS,EAAE;QACb,CAAC;QACDC,IAAI,EAAE;UACJX,UAAU,EAAE;QACd;MACF;IACF;EACF;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA,SAAQF,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}