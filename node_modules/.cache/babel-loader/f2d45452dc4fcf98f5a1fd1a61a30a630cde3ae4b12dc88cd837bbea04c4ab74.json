{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gja53\\\\OneDrive\\\\Desktop\\\\the-weather-forecasting-main\\\\the-weather-forecasting-main\\\\src\\\\components\\\\Reusable\\\\UTCTime.js\";\nimport React from 'react';\nimport { Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UTCTime = ({\n  timezone\n}) => {\n  const now = new Date(); // Get the current date and time\n  const utcTime = new Date(now.getTime() + timezone * 60000).toLocaleString('en-US', {\n    // Adjust time based on timezone offset\n    hour: '2-digit',\n    minute: '2-digit',\n    hourCycle: 'h12',\n    timeZone: 'UTC' // Display time in UTC timezone\n  });\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"h3\",\n    component: \"h3\",\n    sx: {\n      fontSize: '20px',\n      color: 'rgba(255, 255, 255, .7)',\n      fontFamily: 'Poppins'\n    },\n    children: [utcTime, \" GMT\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = UTCTime;\nexport default UTCTime;\nvar _c;\n$RefreshReg$(_c, \"UTCTime\");","map":{"version":3,"names":["React","Typography","jsxDEV","_jsxDEV","UTCTime","timezone","now","Date","utcTime","getTime","toLocaleString","hour","minute","hourCycle","timeZone","variant","component","sx","fontSize","color","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gja53/OneDrive/Desktop/the-weather-forecasting-main/the-weather-forecasting-main/src/components/Reusable/UTCTime.js"],"sourcesContent":["import React from 'react';\nimport { Typography } from '@mui/material';\n\nconst UTCTime = ({ timezone }) => {\n  const now = new Date(); // Get the current date and time\n  const utcTime = new Date(now.getTime() + timezone * 60000).toLocaleString('en-US', { // Adjust time based on timezone offset\n    hour: '2-digit',\n    minute: '2-digit',\n    hourCycle: 'h12',\n    timeZone: 'UTC', // Display time in UTC timezone\n  });\n\n  return (\n    <Typography\n      variant=\"h3\"\n      component=\"h3\"\n      sx={{\n        fontSize: '20px',\n        color: 'rgba(255, 255, 255, .7)',\n        fontFamily: 'Poppins',\n      }}\n    >\n      {utcTime} GMT\n    </Typography>\n  );\n};\n\nexport default UTCTime;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAChC,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC,CAAC,CAAC;EACxB,MAAMC,OAAO,GAAG,IAAID,IAAI,CAACD,GAAG,CAACG,OAAO,CAAC,CAAC,GAAGJ,QAAQ,GAAG,KAAK,CAAC,CAACK,cAAc,CAAC,OAAO,EAAE;IAAE;IACnFC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,SAAS;IACjBC,SAAS,EAAE,KAAK;IAChBC,QAAQ,EAAE,KAAK,CAAE;EACnB,CAAC,CAAC;EAEF,oBACEX,OAAA,CAACF,UAAU;IACTc,OAAO,EAAC,IAAI;IACZC,SAAS,EAAC,IAAI;IACdC,EAAE,EAAE;MACFC,QAAQ,EAAE,MAAM;MAChBC,KAAK,EAAE,yBAAyB;MAChCC,UAAU,EAAE;IACd,CAAE;IAAAC,QAAA,GAEDb,OAAO,EAAC,MACX;EAAA;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAY,CAAC;AAEjB,CAAC;AAACC,EAAA,GAtBItB,OAAO;AAwBb,eAAeA,OAAO;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}