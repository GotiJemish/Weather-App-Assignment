{"ast":null,"code":"import { MONTHS, DAYS } from './DateConstants';\nconst date = new Date();\nexport const Today = date.toLocaleDateString('en-US', {\n  weekday: 'long',\n  month: 'short',\n  year: 'numeric'\n});\nexport const MonthYear = date.toLocaleDateString('en-US', {\n  month: 'short',\n  year: 'numeric'\n});\nexport function getWeekDays() {\n  const dayInAWeek = new Date().getDay();\n  const days = DAYS.slice(dayInAWeek, DAYS.length).concat(DAYS.slice(0, dayInAWeek));\n  return days;\n}\nexport function getDayMonthFromDate() {\n  const month = MONTHS[date.getMonth()].slice(0, 3);\n  const day = date.getUTCDate();\n  return day + ' ' + month;\n}\nexport function transformDateFormat() {\n  const month = date.toLocaleString('en-US', {\n    month: '2-digit'\n  });\n  const day = date.toLocaleString('en-US', {\n    day: '2-digit'\n  });\n  const year = date.getFullYear();\n  const time = date.toLocaleString('en-US', {\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    hourCycle: 'h23'\n  });\n  const newFormatDate = year.toString().concat('-', month, '-', day, ' ', time);\n  return newFormatDate;\n}\nexport function getUTCDatetime() {\n  const utcTime = date.toLocaleString('en-US', {\n    hour: '2-digit',\n    minute: '2-digit',\n    hourCycle: 'h23',\n    timeZone: 'UTC'\n  });\n  const isoDateString = new Date().toISOString();\n  const utcDate = isoDateString.split('T')[0].concat(' ', utcTime);\n  return utcDate;\n}\nexport function getUTCTime() {\n  const utcTime = date.toLocaleString('en-US', {\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    hourCycle: 'h23',\n    timeZone: 'UTC'\n  });\n  return utcTime;\n}","map":{"version":3,"names":["MONTHS","DAYS","date","Date","Today","toLocaleDateString","weekday","month","year","MonthYear","getWeekDays","dayInAWeek","getDay","days","slice","length","concat","getDayMonthFromDate","getMonth","day","getUTCDate","transformDateFormat","toLocaleString","getFullYear","time","hour","minute","second","hourCycle","newFormatDate","toString","getUTCDatetime","utcTime","timeZone","isoDateString","toISOString","utcDate","split","getUTCTime"],"sources":["C:/Users/gja53/OneDrive/Desktop/the-weather-forecasting-main/the-weather-forecasting-main/src/utilities/DatetimeUtils.js"],"sourcesContent":["import { MONTHS, DAYS } from './DateConstants';\n\nconst date = new Date();\nexport const Today = date.toLocaleDateString('en-US', {\n  weekday: 'long',\n  month: 'short',\n  year:'numeric'\n});\nexport const MonthYear = date.toLocaleDateString('en-US', {\n  month: 'short',\n  year:'numeric'\n});\n\nexport function getWeekDays() {\n  const dayInAWeek = new Date().getDay();\n  const days = DAYS.slice(dayInAWeek, DAYS.length).concat(\n    DAYS.slice(0, dayInAWeek)\n  );\n  return days;\n}\n\nexport function getDayMonthFromDate() {\n  const month = MONTHS[date.getMonth()].slice(0, 3);\n  const day = date.getUTCDate();\n\n  return day + ' ' + month;\n}\n\nexport function transformDateFormat() {\n  const month = date.toLocaleString('en-US', { month: '2-digit' });\n  const day = date.toLocaleString('en-US', { day: '2-digit' });\n  const year = date.getFullYear();\n  const time = date.toLocaleString('en-US', {\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    hourCycle: 'h23',\n  });\n\n  const newFormatDate = year.toString().concat('-', month, '-', day, ' ', time);\n  return newFormatDate;\n}\n\nexport function getUTCDatetime() {\n  const utcTime = date.toLocaleString('en-US', {\n    hour: '2-digit',\n    minute: '2-digit',\n    hourCycle: 'h23',\n    timeZone: 'UTC',\n  });\n\n  const isoDateString = new Date().toISOString();\n  const utcDate = isoDateString.split('T')[0].concat(' ', utcTime);\n  return utcDate;\n}\n\nexport function getUTCTime() {\n  const utcTime = date.toLocaleString('en-US', {\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    hourCycle: 'h23',\n    timeZone: 'UTC',\n  });\n\n  return utcTime;\n}\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AAE9C,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;AACvB,OAAO,MAAMC,KAAK,GAAGF,IAAI,CAACG,kBAAkB,CAAC,OAAO,EAAE;EACpDC,OAAO,EAAE,MAAM;EACfC,KAAK,EAAE,OAAO;EACdC,IAAI,EAAC;AACP,CAAC,CAAC;AACF,OAAO,MAAMC,SAAS,GAAGP,IAAI,CAACG,kBAAkB,CAAC,OAAO,EAAE;EACxDE,KAAK,EAAE,OAAO;EACdC,IAAI,EAAC;AACP,CAAC,CAAC;AAEF,OAAO,SAASE,WAAWA,CAAA,EAAG;EAC5B,MAAMC,UAAU,GAAG,IAAIR,IAAI,CAAC,CAAC,CAACS,MAAM,CAAC,CAAC;EACtC,MAAMC,IAAI,GAAGZ,IAAI,CAACa,KAAK,CAACH,UAAU,EAAEV,IAAI,CAACc,MAAM,CAAC,CAACC,MAAM,CACrDf,IAAI,CAACa,KAAK,CAAC,CAAC,EAAEH,UAAU,CAC1B,CAAC;EACD,OAAOE,IAAI;AACb;AAEA,OAAO,SAASI,mBAAmBA,CAAA,EAAG;EACpC,MAAMV,KAAK,GAAGP,MAAM,CAACE,IAAI,CAACgB,QAAQ,CAAC,CAAC,CAAC,CAACJ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EACjD,MAAMK,GAAG,GAAGjB,IAAI,CAACkB,UAAU,CAAC,CAAC;EAE7B,OAAOD,GAAG,GAAG,GAAG,GAAGZ,KAAK;AAC1B;AAEA,OAAO,SAASc,mBAAmBA,CAAA,EAAG;EACpC,MAAMd,KAAK,GAAGL,IAAI,CAACoB,cAAc,CAAC,OAAO,EAAE;IAAEf,KAAK,EAAE;EAAU,CAAC,CAAC;EAChE,MAAMY,GAAG,GAAGjB,IAAI,CAACoB,cAAc,CAAC,OAAO,EAAE;IAAEH,GAAG,EAAE;EAAU,CAAC,CAAC;EAC5D,MAAMX,IAAI,GAAGN,IAAI,CAACqB,WAAW,CAAC,CAAC;EAC/B,MAAMC,IAAI,GAAGtB,IAAI,CAACoB,cAAc,CAAC,OAAO,EAAE;IACxCG,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE,SAAS;IACjBC,SAAS,EAAE;EACb,CAAC,CAAC;EAEF,MAAMC,aAAa,GAAGrB,IAAI,CAACsB,QAAQ,CAAC,CAAC,CAACd,MAAM,CAAC,GAAG,EAAET,KAAK,EAAE,GAAG,EAAEY,GAAG,EAAE,GAAG,EAAEK,IAAI,CAAC;EAC7E,OAAOK,aAAa;AACtB;AAEA,OAAO,SAASE,cAAcA,CAAA,EAAG;EAC/B,MAAMC,OAAO,GAAG9B,IAAI,CAACoB,cAAc,CAAC,OAAO,EAAE;IAC3CG,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,SAAS;IACjBE,SAAS,EAAE,KAAK;IAChBK,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMC,aAAa,GAAG,IAAI/B,IAAI,CAAC,CAAC,CAACgC,WAAW,CAAC,CAAC;EAC9C,MAAMC,OAAO,GAAGF,aAAa,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACrB,MAAM,CAAC,GAAG,EAAEgB,OAAO,CAAC;EAChE,OAAOI,OAAO;AAChB;AAEA,OAAO,SAASE,UAAUA,CAAA,EAAG;EAC3B,MAAMN,OAAO,GAAG9B,IAAI,CAACoB,cAAc,CAAC,OAAO,EAAE;IAC3CG,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE,SAAS;IACjBC,SAAS,EAAE,KAAK;IAChBK,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,OAAOD,OAAO;AAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}