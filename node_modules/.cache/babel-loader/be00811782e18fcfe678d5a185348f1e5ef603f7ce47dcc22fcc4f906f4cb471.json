{"ast":null,"code":"const MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nconst DAYS = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\nconst date = new Date();\nconst Today = date.toLocaleDateString('en-US', {\n  weekday: 'long'\n});\nconst MonthYear = date.toLocaleDateString('en-US', {\n  day: '2-digit',\n  month: 'short',\n  year: 'numeric'\n});\nconst getWeekDays = () => {\n  const dayInAWeek = new Date().getDay();\n  const days = DAYS.slice(dayInAWeek, DAYS.length).concat(DAYS.slice(0, dayInAWeek));\n  return days;\n};\nconst getDayMonthFromDate = () => {\n  const month = MONTHS[date.getMonth()].slice(0, 3);\n  const day = date.getUTCDate();\n  return day + ' ' + month;\n};\nconst transformDateFormat = () => {\n  const month = date.toLocaleString('en-US', {\n    month: '2-digit'\n  });\n  const day = date.toLocaleString('en-US', {\n    day: '2-digit'\n  });\n  const year = date.getFullYear();\n  const time = date.toLocaleString('en-US', {\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    hourCycle: 'h23'\n  });\n  const newFormatDate = year.toString().concat('-', month, '-', day, ' ', time);\n  return newFormatDate;\n};\nexport { Today, MonthYear, getWeekDays, getDayMonthFromDate, transformDateFormat };","map":{"version":3,"names":["MONTHS","DAYS","date","Date","Today","toLocaleDateString","weekday","MonthYear","day","month","year","getWeekDays","dayInAWeek","getDay","days","slice","length","concat","getDayMonthFromDate","getMonth","getUTCDate","transformDateFormat","toLocaleString","getFullYear","time","hour","minute","second","hourCycle","newFormatDate","toString"],"sources":["C:/Users/gja53/OneDrive/Desktop/the-weather-forecasting-main/the-weather-forecasting-main/src/utilities/DatetimeUtils.js"],"sourcesContent":["\nconst MONTHS = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\nconst DAYS = [\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n  'Sunday',\n];\nconst date = new Date();\nconst Today = date.toLocaleDateString('en-US', {\n  weekday: 'long',\n});\nconst MonthYear = date.toLocaleDateString('en-US', {\n  day:'2-digit',\n  month: 'short',\n  year:'numeric'\n});\n\nconst getWeekDays=()=> {\n  const dayInAWeek = new Date().getDay();\n  const days = DAYS.slice(dayInAWeek, DAYS.length).concat(\n    DAYS.slice(0, dayInAWeek)\n  );\n  return days;\n}\n\nconst getDayMonthFromDate=()=> {\n  const month = MONTHS[date.getMonth()].slice(0, 3);\n  const day = date.getUTCDate();\n\n  return day + ' ' + month;\n}\n\nconst transformDateFormat=()=> {\n  const month = date.toLocaleString('en-US', { month: '2-digit' });\n  const day = date.toLocaleString('en-US', { day: '2-digit' });\n  const year = date.getFullYear();\n  const time = date.toLocaleString('en-US', {\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    hourCycle: 'h23',\n  });\n\n  const newFormatDate = year.toString().concat('-', month, '-', day, ' ', time);\n  return newFormatDate;\n}\nexport {Today,MonthYear,getWeekDays,getDayMonthFromDate,transformDateFormat}\n\n\n\n"],"mappings":"AACA,MAAMA,MAAM,GAAG,CACb,SAAS,EACT,UAAU,EACV,OAAO,EACP,OAAO,EACP,KAAK,EACL,MAAM,EACN,MAAM,EACN,QAAQ,EACR,WAAW,EACX,SAAS,EACT,UAAU,EACV,UAAU,CACX;AACD,MAAMC,IAAI,GAAG,CACX,QAAQ,EACR,SAAS,EACT,WAAW,EACX,UAAU,EACV,QAAQ,EACR,UAAU,EACV,QAAQ,CACT;AACD,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;AACvB,MAAMC,KAAK,GAAGF,IAAI,CAACG,kBAAkB,CAAC,OAAO,EAAE;EAC7CC,OAAO,EAAE;AACX,CAAC,CAAC;AACF,MAAMC,SAAS,GAAGL,IAAI,CAACG,kBAAkB,CAAC,OAAO,EAAE;EACjDG,GAAG,EAAC,SAAS;EACbC,KAAK,EAAE,OAAO;EACdC,IAAI,EAAC;AACP,CAAC,CAAC;AAEF,MAAMC,WAAW,GAACA,CAAA,KAAK;EACrB,MAAMC,UAAU,GAAG,IAAIT,IAAI,CAAC,CAAC,CAACU,MAAM,CAAC,CAAC;EACtC,MAAMC,IAAI,GAAGb,IAAI,CAACc,KAAK,CAACH,UAAU,EAAEX,IAAI,CAACe,MAAM,CAAC,CAACC,MAAM,CACrDhB,IAAI,CAACc,KAAK,CAAC,CAAC,EAAEH,UAAU,CAC1B,CAAC;EACD,OAAOE,IAAI;AACb,CAAC;AAED,MAAMI,mBAAmB,GAACA,CAAA,KAAK;EAC7B,MAAMT,KAAK,GAAGT,MAAM,CAACE,IAAI,CAACiB,QAAQ,CAAC,CAAC,CAAC,CAACJ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EACjD,MAAMP,GAAG,GAAGN,IAAI,CAACkB,UAAU,CAAC,CAAC;EAE7B,OAAOZ,GAAG,GAAG,GAAG,GAAGC,KAAK;AAC1B,CAAC;AAED,MAAMY,mBAAmB,GAACA,CAAA,KAAK;EAC7B,MAAMZ,KAAK,GAAGP,IAAI,CAACoB,cAAc,CAAC,OAAO,EAAE;IAAEb,KAAK,EAAE;EAAU,CAAC,CAAC;EAChE,MAAMD,GAAG,GAAGN,IAAI,CAACoB,cAAc,CAAC,OAAO,EAAE;IAAEd,GAAG,EAAE;EAAU,CAAC,CAAC;EAC5D,MAAME,IAAI,GAAGR,IAAI,CAACqB,WAAW,CAAC,CAAC;EAC/B,MAAMC,IAAI,GAAGtB,IAAI,CAACoB,cAAc,CAAC,OAAO,EAAE;IACxCG,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE,SAAS;IACjBC,SAAS,EAAE;EACb,CAAC,CAAC;EAEF,MAAMC,aAAa,GAAGnB,IAAI,CAACoB,QAAQ,CAAC,CAAC,CAACb,MAAM,CAAC,GAAG,EAAER,KAAK,EAAE,GAAG,EAAED,GAAG,EAAE,GAAG,EAAEgB,IAAI,CAAC;EAC7E,OAAOK,aAAa;AACtB,CAAC;AACD,SAAQzB,KAAK,EAACG,SAAS,EAACI,WAAW,EAACO,mBAAmB,EAACG,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}